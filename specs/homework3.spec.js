import { fullTrim, nameIsValid } from '../src/homework3';

describe('Проверка удаления пробелов и табуляторов', () => {
  /**
   * Допишите несколько unit тестов для функции (вспоминаем тест-дизайн),
   * которая удаляет пробелы и табуляторы в начале и конце строки.
   */
  test('Проверяем тримминг для пробела в начале слова', () => {
    expect(fullTrim(' Это домашка')).toEqual('Это домашка');
  });
  test('Проверяем тримминг для пробела в конце слова', () => {
    expect(fullTrim('Это домашка ')).toEqual('Это домашка');
  });
  test('Проверяем тримминг для пробела в начале и в конце слова', () => {
    expect(fullTrim(' Это домашка ')).toEqual('Это домашка');
  });
  test('Проверяем тримминг для нескольких пробела в начале и в конце слова', () => {
    expect(fullTrim('     Это домашка     ')).toEqual('Это домашка');
  });
  test('Проверяем тримминг для табулятора в начале слова', () => {
    expect(fullTrim(' Это домашка')).toEqual('Это домашка');
  });
  test('Проверяем тримминг для табулятора в конце слова', () => {
    expect(fullTrim('Это домашка  ')).toEqual('Это домашка');
  });
  test('Проверяем тримминг для табулятора в начале и в конце слова', () => {
    expect(fullTrim(' Это домашка ')).toEqual('Это домашка');
  });
  test('Проверяем тримминг для нескольких табуляторов в начале и в конце слова', () => {
    expect(fullTrim('         Это домашка       ')).toEqual('Это домашка');
  });
});
  /**
   * Напишите параметризированный unit (describe.each`table`) тест для функции,
   * которая проверяет валидность кличек котиков.
   * Кличка считается валидной, если она соответствует следующим условиям:
   * 1) Кличка содержит минимум два символа;
   * 2) Кличка не пустая;
   * 3) Кличка не содержит пробелов.

   Обратите внимание, в примере приведен обычный тест.
   Параметризированный тест - https://jestjs.io/docs/en/api#testeachtablename-fn-timeout
   */
describe('Кличка для котиков', () => {
  test('Передать валидную кличку', () => {
    expect(nameIsValid('Имя')).toEqual(true);
  });
});

test.each([
  {name: 'Вася', expected: true},
  {name:'А', expected: false},
  {name:' ', expected: false},
  {name:' Вася', expected: false},
  {name:'Вася ', expected: false},
  {name:' Вася ', expected: false},
  {name:'Ва ся', expected: false},
])('Проверяем валидность клички "$name"', ({name, expected}) => {
  expect(nameIsValid(name)).toEqual(expected);
});
